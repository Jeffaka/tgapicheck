name: Telegram API Monitor

on:
  schedule:
    - cron: "*/5 * * * *"  # –∑–∞–ø—É—Å–∫ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω
  workflow_dispatch:       # –¥–æ–∑–≤–æ–ª—è—î –≤—Ä—É—á–Ω—É –∑–∞–ø—É—Å–∫–∞—Ç–∏

jobs:
  check-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install requests
        run: pip install requests

      - name: Run monitor
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          python <<EOF
          import os
          import requests

          bot_token = os.getenv("BOT_TOKEN")
          chat_id = os.getenv("CHAT_ID")
          url = f"https://api.telegram.org/bot{bot_token}/getMe"
          alert_url = f"https://api.telegram.org/bot{bot_token}/sendMessage"

          try:
              r = requests.get(url, timeout=10)
              if r.status_code == 200:
                  print("API –¥–æ—Å—Ç—É–ø–Ω–µ")
              else:
                  requests.post(alert_url, data={
                      "chat_id": chat_id,
                      "text": f"‚ö†Ô∏è Telegram API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ (–∫–æ–¥ {r.status_code})"
                  })
          except Exception as e:
              requests.post(alert_url, data={
                  "chat_id": chat_id,
                  "text": f"üö® Telegram API –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î: {e}"
              })
          EOF
